<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans 
         				   http://www.springframework.org/schema/beans/spring-beans.xsd
               			   http://www.springframework.org/schema/context 
               			   http://www.springframework.org/schema/context/spring-context.xsd
               			   http://www.springframework.org/schema/aop 
               			   http://www.springframework.org/schema/aop/spring-aop.xsd
               			   http://www.springframework.org/schema/tx 
               			   http://www.springframework.org/schema/tx/spring-tx.xsd">
      
      <!-- mybatis db설정 파일 경로 설정 설정이 비었을경우 없어도 무방 -->         			   
      <context:property-placeholder location="classpath:config/mybatis/db.properties"/>
      
      <!-- 데이터프로퍼티스에서 정보를 커넥트 풀에 넘겨줌 -->
      <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
      	  destroy-method="close"
      	  p:driverClassName="${driver}"
      	  p:url="${url}"
      	  p:username="${mysqlusername}"
      	  p:password="${mysqlpassword}"/>
      
      
      <!-- db관련 경로를 지정해줌 -->
      <bean id="sqlSeesionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="typeAliasesPackage" value="kr.co.doublecome.repository.vo"/>
		<property name="mapperLocations" value="classpath:config/mapper/*.xml"/>
		<property name="configLocation" value="classpath:config/mybatis/sqlMapConfig.xml"/>
      </bean>	
      
      
	   <!-- mapper의 구현체를 생성해줌 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
      	<property name="basePackage" value="kr.co.doublecome.repository.mapper" />
	</bean>		
	
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 트랜잭션하는 advice생성 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- 위에 설정한 advice를 포인트컷을 지정해줌 -->
	<aop:config>
		<aop:pointcut expression="execution(public * kr.co.doublecome..service.*Impl.*(..))" id="tranMethod"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="tranMethod"/>
	</aop:config>
	
	
</beans>
